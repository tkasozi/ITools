name: Build and Package
on:
  push:
    branches: [ "github-workflow" ]
  pull_request:
    branches: [ "github-workflow" ]
  release:
    types: [published]

jobs:
  build-and-package:
    runs-on: windows-latest # Or a specific Windows version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up MSVC environment
        uses: microsoft/setup-msbuild@v2

      
      - name: Download Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe?site=1" -OutFile "inno_setup.exe"
          Start-Process -Wait -FilePath "inno_setup.exe" -ArgumentList "/SILENT"
        shell: powershell
        
      - name: Install Qt 6 Silently
        run: |
          Invoke-WebRequest -Uri "https://download.qt.io/official_releases/online_installers/qt-online-installer-windows-x64-online.exe" -OutFile "qt_installer.exe"
          $qt_install_path = "C:\Qt\6" # Define your desired install path
          $arguments = @(
            "--install-prefix", "$qt_install_path",
            "--modules", "qtbase qtdeclarative qttools",
            "--accept-licenses",
            "--unattended"
          )
          Start-Process -Wait -FilePath "qt_installer.exe" -ArgumentList $arguments
        shell: powershell
        
      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="C:/Qt/6"

      - name: Build project
        run: cmake --build ${{ github.workspace }}/build --config Release --parallel ${{ env.PROCESSOR_NUMBER }}

      - name: Find application executable
        id: find-exe
        run: |
          Get-ChildItem -Path "${{ github.workspace }}/build/Release" -Filter "*.exe" | Select-Object -First 1 -ExpandProperty Name | Out-File -FilePath app_exe_name.txt
        shell: powershell

      - name: Read application executable name
        id: app-name
        run: echo "APP_NAME=$(cat app_exe_name.txt)" >> $GITHUB_ENV

      - name: Generate installer with Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" ${{ github.workspace }}/installer.iss
        env:
          APP_VERSION: ${{ github.event.release.tag_name }} # Assuming your release tag follows a versioning scheme
          OUTPUT_DIR: ${{ github.workspace }}/build/installer
          APP_BINARY: ${{ github.workspace }}/build/Release/${{ env.APP_NAME }}
        shell: powershell

      - name: Create release archive
        uses: thedoctor0/zip-release@master
        with:
          filename: ${{ github.event.release.tag_name }}-${{ runner.os }}.zip
          directory: ${{ github.workspace }}/build/installer

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/${{ github.event.release.tag_name }}-${{ runner.os }}.zip
          asset_name: ${{ github.event.release.tag_name }}-${{ runner.os }}.zip
          asset_content_type: application/zip
